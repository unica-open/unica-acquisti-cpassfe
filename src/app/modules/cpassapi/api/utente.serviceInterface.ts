/*
* SPDX-FileCopyrightText: Copyright 2019 - 2020 | CSI Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
/**
 * Contabilità passiva
 * API per il backend della suite di contabilità passiva.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiError } from '../model/apiError';
import { Modulo } from '../model/modulo';
import { Permesso } from '../model/permesso';
import { Ruolo } from '../model/ruolo';
import { Settore } from '../model/settore';
import { SettoreRuoliPermessi } from '../model/settoreRuoliPermessi';
import { Utente } from '../model/utente';


import { Configuration }                                     from '../configuration';


export interface UtenteServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * 
    * Cancella l&#39;utente per id.
    * @param id L&#39;id dell&#39;utente.
    */
    deleteUtenteById(id: string, extraHttpRequestParams?: any): Observable<string>;

    /**
    * 
    * Restituisce i moduli di un determinato settore.
    * @param id_settore L&#39;id del settore dell&#39;utente.
    */
    getModuliBySettore(id_settore: string, extraHttpRequestParams?: any): Observable<Array<Modulo>>;

    /**
    * 
    * Restituisce le i permessi di un determinato utente, settore e modulo.
    * @param id_settore L&#39;id del settore.
    * @param id_modulo L&#39;id del modulo.
    */
    getPermessiBySettoreAndModulo(id_settore: string, id_modulo: number, extraHttpRequestParams?: any): Observable<Array<Permesso>>;

    /**
    * 
    * Restituisce i ruoli di un utente per un determinato settore.
    * @param id_settore L&#39;id del settore dell&#39;utente.
    */
    getRuoliBySettore(id_settore: string, extraHttpRequestParams?: any): Observable<Array<Ruolo>>;

    /**
    * 
    * Restituisce una lista di utenti rup legati al settore.
    * @param id_settore L&#39;id del settore.
    */
    getRupsBySettoreId(id_settore: string, extraHttpRequestParams?: any): Observable<Array<Utente>>;

    /**
    * 
    * Restituisce una lista di settori legati al RUP.
    * @param id_rup L&#39;id del rup.
    */
    getSettoriByRupId(id_rup: string, extraHttpRequestParams?: any): Observable<Array<Settore>>;

    /**
    * 
    * Restituisce i settori di un determinato utente.
    */
    getSettoriByUtente(extraHttpRequestParams?: any): Observable<Array<Settore>>;

    /**
    * 
    * Restituisce i ruoli settori e permessi dell&#39; utente connesso.
    */
    getSettoriRuoliPermessiByUtente(extraHttpRequestParams?: any): Observable<Array<SettoreRuoliPermessi>>;

    /**
    * 
    * Restituisce l&#39;utente per id.
    * @param id L&#39;id dell&#39;utente.
    */
    getUtenteById(id: string, extraHttpRequestParams?: any): Observable<Utente>;

    /**
    * 
    * Restituisce gli utenti di un determinato settore.
    * @param id_settore L&#39;id del settore dell&#39;utente.
    * @param ruolo_codice codice del ruolo.
    */
    getUtenteBySettoreRuolo(id_settore: string, ruolo_codice: string, extraHttpRequestParams?: any): Observable<Array<Utente>>;

    /**
    * 
    * Restituisce l&#39;utente che effettua la chiamata.
    */
    getUtenteSelf(extraHttpRequestParams?: any): Observable<Utente>;

    /**
    * 
    * Restituisce gli utenti .
    * @param offset Il numero di record da ignorare prima di iniziare a raccogliere i risultati.
    * @param limit Il numero di record da restituire.
    */
    getUtenti(offset?: number, limit?: number, extraHttpRequestParams?: any): Observable<Array<Utente>>;

    /**
    * 
    * Inserisce un utente su sistema.
    * @param utente 
    */
    postUtente(utente: Utente, extraHttpRequestParams?: any): Observable<Utente>;

    /**
    * 
    * Aggiorna l&#39;Elaborazione per id.
    * @param id L&#39;id dell&#39;utente.
    * @param utente 
    */
    putElaborazioneById(id: string, utente: Utente, extraHttpRequestParams?: any): Observable<Utente>;

    /**
    * 
    * Aggiorna l&#39;utente per id.
    * @param id L&#39;id dell&#39;utente.
    * @param utente 
    */
    putUtenteById(id: string, utente: Utente, extraHttpRequestParams?: any): Observable<Utente>;

}
