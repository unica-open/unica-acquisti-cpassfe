/*
* SPDX-FileCopyrightText: Copyright 2019 - 2020 | CSI Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
/**
 * Contabilità passiva
 * API per il backend della suite di contabilità passiva.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AcquistoVariato } from '../model/acquistoVariato';
import { AliquoteIva } from '../model/aliquoteIva';
import { ApiError } from '../model/apiError';
import { Ausa } from '../model/ausa';
import { CausaleSospensioneEvasione } from '../model/causaleSospensioneEvasione';
import { Cpv } from '../model/cpv';
import { ModalitaAffidamento } from '../model/modalitaAffidamento';
import { Nuts } from '../model/nuts';
import { Ods } from '../model/ods';
import { PagedResponseOds } from '../model/pagedResponseOds';
import { Priorita } from '../model/priorita';
import { RicompresoTipo } from '../model/ricompresoTipo';
import { Risorsa } from '../model/risorsa';
import { SettoreInterventi } from '../model/settoreInterventi';
import { Stato } from '../model/stato';
import { StatoElOrdine } from '../model/statoElOrdine';
import { StatoNso } from '../model/statoNso';
import { TipoAcquisto } from '../model/tipoAcquisto';
import { TipoEvasione } from '../model/tipoEvasione';
import { TipoOrdine } from '../model/tipoOrdine';
import { TipoProcedura } from '../model/tipoProcedura';
import { UnitaMisura } from '../model/unitaMisura';


import { Configuration }                                     from '../configuration';


export interface DecodificaServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * 
    * Restituisce gli Acquisti Variati registrati su sistema.
    */
    getAcquistiVariati(extraHttpRequestParams?: any): Observable<Array<AcquistoVariato>>;

    /**
    * 
    * Restituisce le aliquote Iva registrate su sistema.
    */
    getAliquoteIva(extraHttpRequestParams?: any): Observable<Array<AliquoteIva>>;

    /**
    * 
    * Restituisce le Causali Sospensione Evasione registrate su sistema.
    */
    getAllCausaleSospensioneEvasioneValide(extraHttpRequestParams?: any): Observable<Array<CausaleSospensioneEvasione>>;

    /**
    * 
    * Restituisce le AUSA registrate su sistema.
    */
    getAusas(extraHttpRequestParams?: any): Observable<Array<Ausa>>;

    /**
    * 
    * Restituisce i CPV registrati su sistema.
    */
    getCpv(extraHttpRequestParams?: any): Observable<Array<Cpv>>;

    /**
    * 
    * Restituisce i CPV legati a ODS registrati su sistema.
    */
    getCpvOdsTree(extraHttpRequestParams?: any): Observable<Array<Cpv>>;

    /**
    * 
    * Restituisce i CPV registrati su sistema.
    */
    getCpvTree(extraHttpRequestParams?: any): Observable<Array<Cpv>>;

    /**
    * 
    * Restituisce le modalità di affidamento registrate su sistema.
    */
    getModalitaAffidamento(extraHttpRequestParams?: any): Observable<Array<ModalitaAffidamento>>;

    /**
    * 
    * Restituisce i NUTS registrati su sistema.
    */
    getNuts(extraHttpRequestParams?: any): Observable<Array<Nuts>>;

    /**
    * 
    * Restituisce le priorità registrate su sistema.
    */
    getPriorita(extraHttpRequestParams?: any): Observable<Array<Priorita>>;

    /**
    * 
    * Restituisce gli oggetti di spesa presenti a sistema.
    * @param oggettiSpesa 
    * @param offset Il numero di record da ignorare prima di iniziare a raccogliere i risultati.
    * @param limit Il numero di record da restituire.
    * @param sort Il campo di sort.
    * @param direction La direzione di sort.
    */
    getRicercaOggettiSpesa(oggettiSpesa: Ods, offset?: number, limit?: number, sort?: string, direction?: 'asc' | 'desc' | '', extraHttpRequestParams?: any): Observable<PagedResponseOds>;

    /**
    * 
    * Restituisce i tipi di ricompreso registrati su sistema.
    */
    getRicompresoTipos(extraHttpRequestParams?: any): Observable<Array<RicompresoTipo>>;

    /**
    * 
    * Restituisce le risorse registrate su sistema.
    */
    getRisorse(extraHttpRequestParams?: any): Observable<Array<Risorsa>>;

    /**
    * 
    * Restituisce i settori interventi registrati su sistema.
    */
    getSettoreInterventi(extraHttpRequestParams?: any): Observable<Array<SettoreInterventi>>;

    /**
    * 
    * Restituisce gli Stato registrati su sistema.
    * @param tipo codice tipo.
    */
    getStatoByTipo(tipo: string, extraHttpRequestParams?: any): Observable<Array<Stato>>;

    /**
    * 
    * Restituisce gli StatoElOrdine registrati su sistema.
    * @param tipo codice tipo.
    */
    getStatoElOrdineByTipo(tipo: string, extraHttpRequestParams?: any): Observable<Array<StatoElOrdine>>;

    /**
    * 
    * Restituisce gli StatoNso registrati su sistema.
    * @param tipo codice tipo nso.
    */
    getStatoNsoByTipo(tipo: string, extraHttpRequestParams?: any): Observable<Array<StatoNso>>;

    /**
    * 
    * Restituisce i TipoAcquisto validi registrati su sistema.
    */
    getTipoAcquistos(extraHttpRequestParams?: any): Observable<Array<TipoAcquisto>>;

    /**
    * 
    * Restituisce i TipoEvasione validi registrati su sistema.
    */
    getTipoEvasione(extraHttpRequestParams?: any): Observable<Array<TipoEvasione>>;

    /**
    * 
    * Restituisce i TipoOrdine registrati su sistema.
    */
    getTipoOrdine(extraHttpRequestParams?: any): Observable<Array<TipoOrdine>>;

    /**
    * 
    * Restituisce i TipoProcedura registrati su sistema.
    */
    getTipoProcedura(extraHttpRequestParams?: any): Observable<Array<TipoProcedura>>;

    /**
    * 
    * Restituisce le Unita Misura registrate su sistema.
    */
    getUnitaMisura(extraHttpRequestParams?: any): Observable<Array<UnitaMisura>>;

}
